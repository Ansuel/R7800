#!/bin/sh /etc/rc.common
START=99

PATH=/bin:/sbin:/usr/bin:/usr/sbin
CONFIG=/bin/config
PROG=/usr/sbin/openvpn
PID_FILE=/var/run/openvpn-client.pid
LOG_FILE=/var/log/openvpn-client.log
AP_MODE=$($CONFIG get ap_mode)
BRIDGE_MODE=$($CONFIG get bridge_mode)
EXTENDER_MODE=$($CONFIG get extender_mode)
OPENVPN_CONF_DIR=/etc/openvpn/config/client
CHECK_HOST=www.google.com
OPT_ARGS="--fast-io --nice -20 --auth-nocache --sndbuf 393216 --rcvbuf 393216 --tun-mtu 1500 --mssfix 1460"

start() {
	# Check existence of /etc/openvpn/config/client/*.ovpn file
	OVPN_CLIENT_CONF=0
	for OVPN in $OPENVPN_CONF_DIR/*.ovpn; do
		if [[ -f $OVPN ]]; then
			OVPN_CLIENT_CONF=$OVPN
			break
		fi
	done

	# If no *.ovpn file in /etc/openvpn/config/client
	if [ $OVPN_CLIENT_CONF = "0" ]; then
		echo "Error: No *.ovpn file in /etc/openvpn/config/client directory."
		exit 1
	fi

	# Check if not router mode
	if [ "$AP_MODE" == "1" ] || [ "$BRIDGE_MODE" == "1" ] || [ "$EXTENDER_MODE" == "1" ]; then
		echo "Error: Not router mode." | tee -a $LOG_FILE
		exit 1
	fi

	# Check if OpenVPN server is enabled
	if [ "$($CONFIG get vpn_enable)" = "1" ]; then
		echo "Error: OpenVPN server is enabled. Disable it to start OpenVPN client." | tee -a $LOG_FILE
		ledcontrol -n wan -c red -s on
		exit 1
	fi

	# Check if tun0 interface already exists
	ifconfig | grep -q tun0
	if [ $? -eq 0 ]; then
		echo "Error: tun0 interface exists. OpenVPN client is probably already started." | tee -a $LOG_FILE
		exit 1
	fi

	# Sleep before starting if delay is set in NVRAM (to allow NTP set date/time)
	DELAY=$($CONFIG get vpn_client_delay)
	if [ ! "$DELAY" = "" ]; then
		sleep $DELAY
	fi

	# Check if DNS is already working
	count=0
	while [ $count -le 20 ]; do
		ping -q -c 3 $CHECK_HOST
		if [ $? -eq 0 ]; then
			break
		fi
		sleep 15
		count=$(($count+1))
	done

	# Start OpenVPN client (assigned to CPU1)
	taskset -c 1 $PROG $OPT_ARGS --writepid $PID_FILE --cd $OPENVPN_CONF_DIR --log-append $LOG_FILE --config $OVPN_CLIENT_CONF --script-security 2 --up /etc/openvpn/ovpnclient-up.sh --down /etc/openvpn/ovpnclient-down.sh --daemon --push "sndbuf 393216" --push "rcvbuf 393216"
	echo "Please wait..."
	sleep 15

	ifconfig | grep -q tun0
	if [ $? -ne 0 ]; then
		echo "Error: OpenVPN client start failed." | tee -a $LOG_FILE
		ledcontrol -n wan -c red -s on
		if [ -f $PID_FILE ]; then
			kill `cat $PID_FILE` 
			rm -f $PID_FILE
		fi
		exit 1
	fi

	# Set CPU power to turbo mode
	echo "userspace" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
	echo "userspace" > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
	echo "1725000" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_setspeed
	echo "1725000" > /sys/devices/system/cpu/cpu1/cpufreq/scaling_setspeed
	echo 0 > /proc/sys/dev/nss/clock/auto_scale
	echo 800000000 > /proc/sys/dev/nss/clock/current_freq

        # Update affinity for NSS RPS
	irq_nss_rps=`grep 'nss' /proc/interrupts | sed '4,$d' | cut -d ':' -f 1 | tail -n1 | tr -d ' '`
	[ -n "$irq_nss_rps" ] && echo 1 > /proc/irq/$irq_nss_rps/smp_affinity

	# Enable NSS RPS
	sysctl -w dev.nss.general.rps=1 >/dev/null 2>/dev/null

	# Restart firewall	
	net-wall rule
	net-wall start
}

stop() {
	if [ -f $PID_FILE ]; then
		kill `cat $PID_FILE` 
		rm -f $PID_FILE
	fi

	# Restore CPU power to auto mode
	echo "ondemand" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
	echo "ondemand" > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
	echo 1 > /proc/sys/dev/nss/clock/auto_scale

        # Update affinity for NSS RPS
	irq_nss_rps=`grep 'nss' /proc/interrupts | sed '4,$d' | cut -d ':' -f 1 | tail -n1 | tr -d ' '`
	[ -n "$irq_nss_rps" ] && echo 2 > /proc/irq/$irq_nss_rps/smp_affinity

	# Enable NSS RPS
	sysctl -w dev.nss.general.rps=1 >/dev/null 2>/dev/null

	# Restart firewall	
	net-wall rule
	net-wall start
}

restart() {
	stop
	start
}
